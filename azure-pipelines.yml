pool:
  vmImage: 'ubuntu-latest'

steps:
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '3.1.x'

- task: DotNetCoreCLI@2
  displayName: 'Unit tests'
  inputs:
    command: 'test'
    projects: '**/*.Tests.csproj'
    arguments: '--collect:"XPlat Code Coverage"'
    publishTestResults: true

- task: DotNetCoreCLI@2
  displayName: 'Install ReportGenerator'
  condition: succeededOrFailed()
  inputs:
    command: 'custom'
    custom: 'tool'
    arguments: 'install -g dotnet-reportgenerator-globaltool'

- script: reportgenerator -reports:$(Agent.TempDirectory)/**/coverage.cobertura.xml -reporttypes:Cobertura -targetdir:$(Build.ArtifactStagingDirectory)
  displayName: 'Merge coverage reports'

- task: PublishCodeCoverageResults@1
  condition: succeededOrFailed()
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(Build.ArtifactStagingDirectory)/Cobertura.xml'

- task: DotNetCoreCLI@2
  displayName: 'Publish'
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: |
      **/*.csproj
      !*.Tests/*.csproj
    arguments: '--output "$(Build.BinariesDirectory)"'
    zipAfterPublish: false

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.BinariesDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
