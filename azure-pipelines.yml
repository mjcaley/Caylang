variables:
  buildConfiguration: "Release"

pool:
  vmImage: "ubuntu-latest"

steps:
  - task: UseDotNet@2
    inputs:
      packageType: "sdk"
      version: "5.0.x"

  - task: DotNetCoreCLI@2
    displayName: "Build"
    inputs:
      command: "build"
      projects: "**/*.sln"
      arguments: "--configuration $(buildConfiguration)"

  - task: DotNetCoreCLI@2
    displayName: "Unit tests"
    inputs:
      command: "test"
      nobuild: true
      projects: "**/*.Tests.csproj"
      arguments: '--collect:"XPlat Code Coverage"'
      publishTestResults: true

  - task: DotNetCoreCLI@2
    displayName: "Install ReportGenerator"
    condition: succeededOrFailed()
    inputs:
      command: "custom"
      custom: "tool"
      arguments: "install -g dotnet-reportgenerator-globaltool"

  - script: reportgenerator -reports:$(Agent.TempDirectory)/**/coverage.cobertura.xml -reporttypes:Cobertura -targetdir:$(Build.ArtifactStagingDirectory)
    displayName: "Merge coverage reports"

  - task: PublishCodeCoverageResults@1
    condition: succeededOrFailed()
    inputs:
      codeCoverageTool: "Cobertura"
      summaryFileLocation: "$(Build.ArtifactStagingDirectory)/Cobertura.xml"

  - task: DotNetCoreCLI@2
    displayName: "Package"
    inputs:
      command: "pack"
      packagesToPack: "**/*.csproj;!*.Tests/*.csproj"
      nobuild: true
      outputDir: $(Build.BinariesDirectory)

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: "$(Build.BinariesDirectory)"
      ArtifactName: "drop"
      publishLocation: "Container"
